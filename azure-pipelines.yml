# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

resources:
  containers:
    - container: rust-1.29.0
      image: rust:1.29.0-slim

jobs:
  - job: Linux

    pool:
      vmImage: 'Ubuntu 16.04'

    container: rust-1.29.0

    steps:
    - script: cargo build
      displayName: Build all libraries and apps

    - script: cargo test
      displayName: Run all tests (debug mode)

    - script: cargo test --release
      displayName: Run all tests (release mode)

  - job: macOS
    pool:
      vmImage: xcode9-macos10.13

    steps:
    - script: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y
        echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
        export PATH=$PATH:carg
      displayName: Install Rust

    - script: cargo build
      displayName: Build all libraries and apps

    - script: cargo test
      displayName: Run all tests (debug mode)

    - script: cargo test --release
      displayName: Run all tests (release mode)

  - job: Windows
    pool:
      vmImage: vs2017-win2017

    steps:
    - script: |
        curl -sSf -o rustup-init.exe https://win.rustup.rs
        rustup-init.exe -y
        echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
      displayName: Install Rust

    - script: cargo build
      displayName: Build all libraries and apps

    - script: cargo test
      displayName: Run all tests (debug mode)

    - script: cargo test --release
      displayName: Run all tests (release mode)
